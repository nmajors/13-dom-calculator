(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

// document.ready
var numberButtons = document.querySelectorAll(".numberButton");
var numberButtonArray = Array.from(numberButtons);
console.log(numberButtonArray);

var operationButtons = document.getElementsByClassName("operationButton");
var handleOperationClickEvent = function handleOperationClickEvent(operationButton) {

  operationButton.preventDefault();

  var numberOne = document.querySelector("#numberOne").value;
  var numberTwo = document.querySelector("#numberTwo").value;

  var result = undefined;
  switch (this.id) {
    case "addNumbers":
      result = Number(numberOne) + Number(numberTwo);
      break;
    case "subtractNumbers":
      result = Number(numberOne) - Number(numberTwo);
      break;
    case "divideNumbers":
      result = Number(numberOne) / Number(numberTwo);
      break;
    case "multiplyNumbers":
      result = Number(numberOne) * Number(numberTwo);
      break;
    default:
      //nothing to do
      break;

  }
  result = document.querySelector("#answer").innerHTML = +result.toFixed(4);
};
for (var i = 0; i < operationButtons.length; i++) {
  operationButtons[i].addEventListener('click', handleOperationClickEvent, false);
}

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJhcHAvYXBwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FDQ0EsSUFBSSxnQkFBZ0IsU0FBUyxnQkFBVCxDQUEwQixlQUExQixDQUFoQjtBQUNGLElBQUksb0JBQWtCLE1BQU0sSUFBTixDQUFXLGFBQVgsQ0FBbEI7QUFDSixRQUFRLEdBQVIsQ0FBWSxpQkFBWjs7QUFNRixJQUFJLG1CQUFtQixTQUFTLHNCQUFULENBQWdDLGlCQUFoQyxDQUFuQjtBQUNKLElBQUksNEJBQTRCLFNBQTVCLHlCQUE0QixDQUFTLGVBQVQsRUFBMEI7O0FBRXhELGtCQUFnQixjQUFoQixHQUZ3RDs7QUFJeEQsTUFBSSxZQUFZLFNBQVMsYUFBVCxDQUF1QixZQUF2QixFQUFxQyxLQUFyQyxDQUp3QztBQUt4RCxNQUFJLFlBQVksU0FBUyxhQUFULENBQXVCLFlBQXZCLEVBQXFDLEtBQXJDLENBTHdDOztBQU94RCxNQUFJLFNBQVMsU0FBVCxDQVBvRDtBQVF4RCxVQUFRLEtBQUssRUFBTDtBQUNOLFNBQUssWUFBTDtBQUNFLGVBQVMsT0FBTyxTQUFQLElBQW9CLE9BQU8sU0FBUCxDQUFwQixDQURYO0FBRUUsWUFGRjtBQURGLFNBSU8saUJBQUw7QUFDRSxlQUFTLE9BQU8sU0FBUCxJQUFvQixPQUFPLFNBQVAsQ0FBcEIsQ0FEWDtBQUVFLFlBRkY7QUFKRixTQU9PLGVBQUw7QUFDRSxlQUFTLE9BQU8sU0FBUCxJQUFvQixPQUFPLFNBQVAsQ0FBcEIsQ0FEWDtBQUVFLFlBRkY7QUFQRixTQVVPLGlCQUFMO0FBQ0UsZUFBUyxPQUFPLFNBQVAsSUFBb0IsT0FBTyxTQUFQLENBQXBCLENBRFg7QUFFRSxZQUZGO0FBVkY7O0FBZUksWUFGRjs7QUFiRixHQVJ3RDtBQTBCeEQsV0FDQSxTQUFTLGFBQVQsQ0FBdUIsU0FBdkIsRUFBa0MsU0FBbEMsR0FBOEMsQ0FBQyxPQUFPLE9BQVAsQ0FBZSxDQUFmLENBQUQsQ0EzQlU7Q0FBMUI7QUE2QmhDLEtBQUssSUFBSSxJQUFJLENBQUosRUFBTyxJQUFJLGlCQUFpQixNQUFqQixFQUF5QixHQUE3QyxFQUFrRDtBQUNoRCxtQkFBaUIsQ0FBakIsRUFBb0IsZ0JBQXBCLENBQXFDLE9BQXJDLEVBQThDLHlCQUE5QyxFQUF5RSxLQUF6RSxFQURnRDtDQUFsRCIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIvLyBkb2N1bWVudC5yZWFkeVxudmFyIG51bWJlckJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm51bWJlckJ1dHRvblwiKTtcbiAgdmFyIG51bWJlckJ1dHRvbkFycmF5PUFycmF5LmZyb20obnVtYmVyQnV0dG9ucyk7XG4gIGNvbnNvbGUubG9nKG51bWJlckJ1dHRvbkFycmF5KTtcblxuXG5cblxuXG52YXIgb3BlcmF0aW9uQnV0dG9ucyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJvcGVyYXRpb25CdXR0b25cIik7XG52YXIgaGFuZGxlT3BlcmF0aW9uQ2xpY2tFdmVudCA9IGZ1bmN0aW9uKG9wZXJhdGlvbkJ1dHRvbikge1xuXG4gIG9wZXJhdGlvbkJ1dHRvbi5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gIHZhciBudW1iZXJPbmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI251bWJlck9uZVwiKS52YWx1ZTtcbiAgdmFyIG51bWJlclR3byA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbnVtYmVyVHdvXCIpLnZhbHVlO1xuXG4gIHZhciByZXN1bHQgPSB1bmRlZmluZWQ7XG4gIHN3aXRjaCAodGhpcy5pZCkge1xuICAgIGNhc2UgXCJhZGROdW1iZXJzXCI6XG4gICAgICByZXN1bHQgPSBOdW1iZXIobnVtYmVyT25lKSArIE51bWJlcihudW1iZXJUd28pO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcInN1YnRyYWN0TnVtYmVyc1wiOlxuICAgICAgcmVzdWx0ID0gTnVtYmVyKG51bWJlck9uZSkgLSBOdW1iZXIobnVtYmVyVHdvKTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgXCJkaXZpZGVOdW1iZXJzXCI6XG4gICAgICByZXN1bHQgPSBOdW1iZXIobnVtYmVyT25lKSAvIE51bWJlcihudW1iZXJUd28pO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcIm11bHRpcGx5TnVtYmVyc1wiOlxuICAgICAgcmVzdWx0ID0gTnVtYmVyKG51bWJlck9uZSkgKiBOdW1iZXIobnVtYmVyVHdvKTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICAvL25vdGhpbmcgdG8gZG9cbiAgICAgIGJyZWFrO1xuXG4gIH1cbiAgcmVzdWx0PVxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Fuc3dlclwiKS5pbm5lckhUTUwgPSArcmVzdWx0LnRvRml4ZWQoNCk7XG59O1xuZm9yICh2YXIgaSA9IDA7IGkgPCBvcGVyYXRpb25CdXR0b25zLmxlbmd0aDsgaSsrKSB7XG4gIG9wZXJhdGlvbkJ1dHRvbnNbaV0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVPcGVyYXRpb25DbGlja0V2ZW50LCBmYWxzZSk7XG59XG4iXX0=
